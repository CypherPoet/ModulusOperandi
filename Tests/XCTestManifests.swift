#if !canImport(ObjectiveC)
import XCTest

extension BinaryFloatingPointModuloTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BinaryFloatingPointModuloTests = [
        ("test_BinaryFloatingPoint_defaultsToEuclideanMode", test_BinaryFloatingPoint_defaultsToEuclideanMode),
        ("test_BinaryFloatingPoint_GivenPositiveDivisor_PerformsModulusAccordingToMode", test_BinaryFloatingPoint_GivenPositiveDivisor_PerformsModulusAccordingToMode),
        ("test_BinaryFloatingPointModulo_GivenPositiveDivisor_PerformsModulusAccordingToMode", test_BinaryFloatingPointModulo_GivenPositiveDivisor_PerformsModulusAccordingToMode),
    ]
}

extension BinaryIntegerModuloTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BinaryIntegerModuloTests = [
        ("test_BinaryFloatingPoint_GivenPositiveDivisor_PerformsModulusAccordingToMode", test_BinaryFloatingPoint_GivenPositiveDivisor_PerformsModulusAccordingToMode),
        ("test_BinaryInteger_defaultsToEuclideanMode", test_BinaryInteger_defaultsToEuclideanMode),
        ("test_BinaryIntegerModulo_GivenPositiveDivisor_PerformsModulusAccordingToMode", test_BinaryIntegerModulo_GivenPositiveDivisor_PerformsModulusAccordingToMode),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(BinaryFloatingPointModuloTests.__allTests__BinaryFloatingPointModuloTests),
        testCase(BinaryIntegerModuloTests.__allTests__BinaryIntegerModuloTests),
    ]
}
#endif
